<?xml version="1.0" encoding="utf-8" ?>
<Project DefaultTargets="Windows" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">

	<PropertyGroup>
		<RootFolder>$(MSBuildProjectDirectory)\..</RootFolder>
		<DeployFolder>$(RootFolder)\bin</DeployFolder>
		<Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
	</PropertyGroup>
	
	<ItemGroup>
		<UnwindWrapperSources Include="$(RootFolder)\src\LibunwindWrapper\*.cpp;$(RootFolder)\src\LibunwindWrapper\*.h"/>
	</ItemGroup>
	
	<Target Name="All">
		<CallTarget Targets="Windows"/>
		<CallTarget Targets="Linux"/>
	</Target>
	
	<Target Name="Windows">
		<MSBuild Projects="$(RootFolder)\src\SuperDumpModels\SuperDumpModels.csproj" Properties="Configuration=$(Configuration);Platform=AnyCPU" Targets="Build"/>
		<MSBuild Projects="$(RootFolder)\src\SuperDump\SuperDump.csproj" Properties="Configuration=$(Configuration);Platform=x86;OutputPath=$(RootFolder)\build\bin\SuperDumpx86" Targets="Build" />
		<MSBuild Projects="$(RootFolder)\src\SuperDump\SuperDump.csproj" Properties="Configuration=$(Configuration);Platform=x64;OutputPath=$(RootFolder)\build\bin\SuperDumpx64" Targets="Build" />
		<MSBuild Projects="$(RootFolder)\src\SuperDumpSelector\SuperDumpSelector.csproj" Properties="Configuration=$(Configuration);Platform=AnyCPU;OutputPath=$(RootFolder)\build\bin\SuperDumpSelector" Targets="Build" />

		<MSBuild Projects="$(RootFolder)\src\SuperDumpService\SuperDumpService.csproj" Properties="Configuration=$(Configuration);Platform=AnyCPU" Targets="Build" />
		<MSBuild Projects="$(RootFolder)\src\SuperDumpService\SuperDumpService.csproj" Properties="DeployOnBuild=true;PublishProfile=FolderProfile" />
		
		<MSBuild Projects="$(RootFolder)\src\SuperDump.DebugDiag\SuperDump.DebugDiag.csproj" Properties="Configuration=$(Configuration);Platform=AnyCPU;OutputPath=$(RootFolder)\build\bin\SuperDump.DebugDiag" Targets="Build" />
	</Target>

	<Target Name="Linux">
		<!-- Linux Build -->
		<Copy SourceFiles="@(UnwindWrapperSources)" DestinationFolder="$(RootFolder)\build\bin\LibunwindWrapper"/>
		<Copy SourceFiles="$(RootFolder)\src\SuperDump.Analyzer.Linux\Dockerfile.Linux" DestinationFolder="$(RootFolder)\build\bin"/>
		<Copy SourceFiles="$(RootFolder)\src\docker-compose-elastic.yaml" DestinationFolder="$(RootFolder)\build\bin"/>
		<Copy SourceFiles="$(RootFolder)\src\SuperDump.Analyzer.Linux\docker-compose-gotty.yaml" DestinationFolder="$(RootFolder)\build\bin"/>
		<Copy SourceFiles="$(RootFolder)\src\SuperDump.Analyzer.Linux\gdb.sh" DestinationFolder="$(RootFolder)\build\bin\SuperDump.Analyzer.Linux"/>
		<MSBuild Projects="$(RootFolder)\src\SuperDump.Analyzer.Linux\SuperDump.Analyzer.Linux.csproj" Properties="Configuration=$(Configuration);Platform=AnyCPU;DeployOnBuild=true;PublishDir=$(RootFolder)\build\bin\SuperDump.Analyzer.Linux\" Targets="Publish" />
		<Exec Command="docker build -f Dockerfile.Linux -t sdlinux:dev ./" WorkingDirectory="$(RootFolder)\build\bin"/>
	</Target>
	
	<Target Name="BuildAllx86">
		<MSBuild Projects="$(RootFolder)\src\SuperDumpModels\SuperDumpModels.csproj" Properties="Configuration=$(Configuration);Platform=AnyCPU" Targets="Build"/>
		<MSBuild Projects="$(RootFolder)\src\SuperDumpModels\SuperDumpModels.csproj" Properties="Configuration=$(Configuration);Platform=x86" Targets="Build"/>
		<MSBuild Projects="$(RootFolder)\src\SuperDumpModels\SuperDumpModels.csproj" Properties="Configuration=$(Configuration);Platform=x64" Targets="Build"/>
		<MSBuild Projects="$(RootFolder)\src\SuperDump\SuperDump.csproj" Properties="Configuration=$(Configuration);Platform=x86;OutputPath=$(RootFolder)\build\bin\SuperDumpx86" Targets="Build" />
		<MSBuild Projects="$(RootFolder)\src\SuperDump\SuperDump.csproj" Properties="Configuration=$(Configuration);Platform=x64;OutputPath=$(RootFolder)\build\bin\SuperDumpx64" Targets="Build" />
		<MSBuild Projects="$(RootFolder)\src\SuperDumpSelector\SuperDumpSelector.csproj" Properties="Configuration=$(Configuration);Platform=AnyCPU;OutputPath=$(RootFolder)\build\bin\SuperDumpSelector" Targets="Build" />
		
		<!-- Linux Build - as of now, the .NET core CLR for Linux does not support 32 bit systems: https://github.com/dotnet/coreclr/issues/9265 -->
		<Copy SourceFiles="@(UnwindWrapperSources)" DestinationFolder="$(RootFolder)\build\bin\LibunwindWrapper"/>
		<Copy SourceFiles="$(RootFolder)\src\SuperDump.Analyzer.Linux\Dockerfile.Linux" DestinationFolder="$(RootFolder)\build\bin"/>
		<Copy SourceFiles="$(RootFolder)\src\docker-compose-elastic.yaml" DestinationFolder="$(RootFolder)\build\bin"/>
		<Copy SourceFiles="$(RootFolder)\src\SuperDump.Analyzer.Linux\docker-compose-gotty.yaml" DestinationFolder="$(RootFolder)\build\bin"/>
		<Copy SourceFiles="$(RootFolder)\src\SuperDump.Analyzer.Linux\gdb.sh" DestinationFolder="$(RootFolder)\build\bin\SuperDump.Analyzer.Linux"/>
		<MSBuild Projects="$(RootFolder)\src\SuperDump.Analyzer.Linux\SuperDump.Analyzer.Linux.csproj" Properties="Configuration=$(Configuration);Platform=AnyCPU;DeployOnBuild=true;PublishDir=$(RootFolder)\build\bin\SuperDump.Analyzer.Linux\" Targets="Publish" />
		<Exec Command="docker build -f Dockerfile.Linux -t sdlinux:dev ./" WorkingDirectory="$(RootFolder)\build\bin"/>
		
		<MSBuild Projects="$(RootFolder)\src\SuperDumpService\SuperDumpService.csproj" Properties="Configuration=$(Configuration);Platform=x86" Targets="Build" />
		<MSBuild Projects="$(RootFolder)\src\SuperDumpService\SuperDumpService.csproj" Properties="DeployOnBuild=true;PublishProfile=FolderProfile" />
		
		<MSBuild Projects="$(RootFolder)\src\SuperDump.DebugDiag\SuperDump.DebugDiag.csproj" Properties="Configuration=$(Configuration);Platform=AnyCPU;OutputPath=$(RootFolder)\build\bin\SuperDump.DebugDiag" Targets="Build" />
	</Target>
</Project>